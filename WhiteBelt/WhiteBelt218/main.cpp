/*	В этой задаче вам нужно присваивать номера автобусным маршрутам.
	А именно, для каждого маршрута, заданного множеством названий остановок, 
	нужно либо выдать новый номер (первому маршруту — 1, второму — 2 и т. д.), 
	либо вернуть номер существующего маршрута, которому соответствует такое множество остановок.

	В отличие от задачи «Автобусные остановки — 2», наборы остановок, которые можно получить друг из друга 
	перестановкой элементов или добавлением/удалением повторяющихся, следует считать одинаковыми.

Формат ввода
	Сначала вводится количество запросов Q, затем Q описаний запросов.
	Каждый запрос представляет собой положительное количество остановок N, за которым следуют 
	разделённые пробелом N названий остановок соответствующего маршрута (не обязательно различных). 
	Названия остановок состоят лишь из латинских букв и символов подчёркивания.

Формат вывода
	Выведите ответ на каждый запрос в отдельной строке.
	Если маршрут с данным набором остановок уже существует, в ответ на соответствующий запрос 
	выведите Already exists for i, где i — номер маршрута с таким набором остановок. 
	В противном случае нужно выделить введённому набору остановок новый номер i и вывести его в формате New bus i. */
#include <iostream>
#include <string>
#include <map>
#include <set>

using namespace std;

int main() {
	int queryNb, stopsNb;
	map<set<string>, int> routes;
	set<string> tempStops;
	string tempStop;

	cin >> queryNb;
	for (int i = 0; i < queryNb; i++) {
		tempStops.clear();
		cin >> stopsNb;
		for (int j = 0; j < stopsNb; j++) {
			cin >> tempStop;
			tempStops.insert(tempStop);
		}

		if (routes.count(tempStops)) {
			cout << "Already exists for " << routes[tempStops] << endl;
		}
		else {
			int routeNb = routes.size() + 1;
			routes[tempStops] = routeNb;
			cout << "New bus " << routeNb << endl;
		}
	}

	return 0;
}