/* У каждого из нас есть повторяющиеся ежемесячные дела, 
	каждое из которых нужно выполнять в конкретный день 
	каждого месяца: оплата счетов за электричество, 
	абонентская плата за связь и пр. Вам нужно реализовать 
	работу со списком таких дел на месяц, а именно, реализовать 
	набор следующих операций:

	ADD i s
	Назначить дело с названием s на день i текущего месяца.

	DUMP i
	Вывести все дела, запланированные на день i текущего месяца.

	NEXT
	Перейти к списку дел на новый месяц. При выполнении данной команды вместо 
	текущего (старого) списка дел на текущий месяц создаётся и становится 
	активным (новый) список дел на следующий месяц: все дела со старого списка 
	дел копируются в новый список. После выполнения данной команды новый список 
	дел и следующий месяц становятся текущими, а работа со старым списком дел 
	прекращается. При переходе к новому месяцу необходимо обратить внимание 
	на разное количество дней в месяцах:
		1) если следующий месяц имеет больше дней, чем текущий, 
		   «дополнительные» дни необходимо оставить пустыми (не содержащими дел);

		2) если следующий месяц имеет меньше дней, чем текущий, 
		   дела со всех «лишних» дней необходимо переместить на последний день следующего месяца.

Замечания
	- Историю списков дел хранить не требуется, работа ведется 
	  только с текущим списком дел текущего месяца. Более того, 
	  при создании списка дел на следующий месяц, он «перетирает» предыдущий список.

	- Обратите внимание, что количество команд NEXT в общей 
	  последовательности команд при работе со списком дел может превышать 11.

	- Начальным текущим месяцем считается январь.

	- Количества дней в месяцах соответствуют Григорианскому календарю 
	  с той лишь разницей, что в феврале всегда 28 дней.

Формат ввода
	Сначала число операций Q, затем описания операций.

	Названия дел s уникальны и состоят только из латинских букв, 
	цифр и символов подчёркивания. Номера дней i являются 
	целыми числами и нумеруются от 1 до размера текущего месяца.

Формат вывода
	Для каждой операции типа DUMP в отдельной строке выведите количество 
	дел в соответствующий день, а затем их названия, разделяя их пробелом. 
	Порядок вывода дел в рамках каждой операции значения не имеет. */
#include <iostream>
#include <string>
#include <vector>

using namespace std;

using DayWork = vector<string>;
using MonthWork = vector<DayWork>;

vector<int> daysNb{31,28,31,30,31,30,31,31,30,31,30,31};

int main() {
	string operation, workName;
	int day, n, prevMonth = 0, nextMonth;
	MonthWork prevMonthWork(daysNb[0]), nextMonthWork;
	vector<vector<string>> dumps;

	cin >> n;

	for (int i = 0; i < n; i++) {
		cin >> operation;

		if (operation == "ADD") {
			cin >> day >> workName;
			prevMonthWork[day - 1].push_back(workName);
		}
		else if (operation == "NEXT") {
			nextMonth = (prevMonth + 1) % 12;

			nextMonthWork.clear();
			nextMonthWork.resize(daysNb[nextMonth]);

			for (int i = 0; i < nextMonthWork.size(); i++) {
				if (i < prevMonthWork.size()) {
					nextMonthWork[i] = prevMonthWork[i];
				}
			}

			if (nextMonthWork.size() < prevMonthWork.size()) {
				for (int i = nextMonthWork.size(); i < prevMonthWork.size(); i++) {
					for (auto w : prevMonthWork[i]) {
						nextMonthWork[nextMonthWork.size() - 1].push_back(w);
					}
				}
			}

			prevMonth = nextMonth;
			prevMonthWork = nextMonthWork;
		}
		else if (operation == "DUMP") {
			cin >> day;
			dumps.push_back(prevMonthWork[day - 1]);
		}
	}

	for (auto d : dumps) {
		cout << d.size();
		for (auto w : d) {
			cout << " " << w;
		}
		cout << endl;
	}
	 
	return 0;
}